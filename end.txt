swagger 같은거 찾아서 내가 만든 API들 요약본 정리해두는 것도 좋고

DB의 컬렉션과 document 구조같은 것도 ERD같은 느낌으로 대략적으로 그림 그려두면 약간 멋있어보입니다.

 

API들이 너무 많아지면 routes 파일을 만들어서 비슷한 API끼리 한 파일에 모아놓거나

아니면 API 안에 있는 코드가 너무 길면 함수로 빼고

비슷한 기능을 하는 함수정의들을 한 파일에 모아두면 깔끔해보일 수 있습니다.



Q. 결제기능?

보통 다날 등 PG사와 계약해서 PG사 결제모듈을 사이트에 설치하는 식으로 구현하는데

포트원이라는 서비스 쓰면 쉽게 사용할 수 있습니다. 

포트원 라이브러리 문법으로 PG사에 결제요청하고 결제성공시 그 결과를 DB에 저장하든 뭘하든 하면 됩니다.

예제코드 복붙이 끝임

내가 외국에서 서비스를 한다면 Paypal, Stripe 이런 결제모듈 간단하게 붙이는게 더 쉽습니다.



Q. 혼자 코드짜도 이게 맞는 코드인지 모르겠다.

동작한다면 일단 모두 맞는 코드입니다. 
다만 DB에 나중에 데이터가 많아져도 출력, 수정, 삭제가 편리할지

- 에러나 예외사항이 발생에 대처가 가능한지

- 나중에 코드가 길어져도 찾아서 수정이 편리할지 

이거 정도만 생각해보면 됩니다. 



Q. 에디터?

유저가 글을 작성할 때 에디터가 필요하다면 Quill js, ToastUI 이런게 쉽습니다. 

에디터는 그냥 유저가 작성한 글을 html이나 JSON으로 변환해서 DB에 저장할 수 있게 도와주는 간단한 UI 입니다.